{"version":3,"file":"OpenCageGeocoding.esm.js","sources":["../../src/js/geocoder.js","../../src/js/geocoding.js","../../src/js/index.js"],"sourcesContent":["import { LatLng, LatLngBounds } from 'leaflet';\nimport { geocode } from 'opencage-api-client';\n/**\n * Geocoder class for OpenCage API interactions\n */\nexport class OpenCageGeocoder {\n  constructor(options = {}) {\n    this.options = {\n      geocodingQueryParams: {},\n      key: '',\n      limit: 5,\n      ...options,\n    };\n  }\n\n  /**\n   * Geocode a query string\n   * @param {string} query - The search query\n   * @param {Function} callback - Callback function to handle results\n   * @param {Object} context - Context object (typically the control instance)\n   */\n  geocode(query, callback, context) {\n    const proximity = this._getProximity(context);\n\n    const params = {\n      q: query,\n      limit: this.options.limit,\n      key: this.options.key,\n      ...proximity,\n      ...this.options.geocodingQueryParams,\n    };\n\n    // this._makeRequest(this.options.serviceUrl, params, (data) => {\n    this._makeRequest(params, (data) => {\n      const results = this._processResults(data);\n      callback.call(context, results);\n    });\n  }\n\n  /**\n   * Reverse geocode a location\n   * @param {Object} location - Location object with lat/lng\n   * @param {number} scale - Scale parameter (unused in current implementation)\n   * @param {Function} callback - Callback function to handle results\n   * @param {Object} context - Context object\n   */\n  reverse(location, scale, callback, context) {\n    this.geocode(location, callback, context);\n  }\n\n  /**\n   * Get proximity parameter from map center\n   * @private\n   */\n  _getProximity(context) {\n    const proximity = {};\n    if (context && context._map && context._map.getCenter()) {\n      const center = context._map.getCenter();\n      proximity.proximity = center.lat + ',' + center.lng;\n    }\n    return proximity;\n  }\n\n  /**\n   * Process API results into standardized format\n   * @private\n   */\n  _processResults(data) {\n    const results = [];\n\n    for (let i = data.results.length - 1; i >= 0; i--) {\n      results[i] = {\n        name: data.results[i].formatted,\n        center: new LatLng(\n          data.results[i].geometry.lat,\n          data.results[i].geometry.lng\n        ),\n      };\n\n      if (data.results[i].bounds) {\n        results[i].bounds = new LatLngBounds(\n          [\n            data.results[i].bounds.southwest.lat,\n            data.results[i].bounds.southwest.lng,\n          ],\n          [\n            data.results[i].bounds.northeast.lat,\n            data.results[i].bounds.northeast.lng,\n          ]\n        );\n      }\n\n      if (this.options.resultExtension) {\n        this._addResultExtensions(results[i], data.results[i]);\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Add result extensions based on configuration\n   * @private\n   */\n  _addResultExtensions(result, apiResult) {\n    const resultExtObj = this.options.resultExtension;\n    const resultExtKeys = Object.keys(resultExtObj);\n\n    for (let j = resultExtKeys.length - 1; j >= 0; j--) {\n      const key = resultExtKeys[j];\n      let resultAttr = apiResult;\n\n      const attrPathKeys = resultExtObj[key].split('.');\n      for (let k = 0; k < attrPathKeys.length; k++) {\n        const keypath = attrPathKeys[k];\n        if (resultAttr[keypath]) {\n          resultAttr = resultAttr[keypath];\n        } else {\n          resultAttr = undefined;\n          break;\n        }\n      }\n      result[key] = resultAttr;\n    }\n  }\n\n  /**\n   * Make JSONP request to the API\n   * @private\n   */\n  // _makeRequest(url, params, callback) {\n  _makeRequest(params, callback) {\n    geocode(params).then((data) => {\n      callback(data);\n    });\n  }\n}\n\n/**\n * Factory function for creating geocoder instances\n */\nexport function createGeocoder(options) {\n  return new OpenCageGeocoder(options);\n}\n","import L, { Control, Marker } from 'leaflet';\nimport { OpenCageGeocoder } from './geocoder.js';\nimport '../css/OpenCageGeocoding.css';\n\n/**\n * OpenCage Geocoding Control for Leaflet\n */\nexport class OpenCageGeocodingControl extends Control {\n  constructor(options = {}) {\n    super(options);\n    this.options = {\n      showResultIcons: false,\n      collapsed: true,\n      expand: 'click',\n      position: 'topright',\n      placeholder: 'Search...',\n      errorMessage: 'Nothing found.',\n      key: '',\n      onResultClick: undefined,\n      addResultToMap: true,\n      limit: 5,\n      ...options,\n    };\n\n    this._callbackId = 0;\n\n    if (!this.options.geocoder) {\n      this.options.geocoder = new OpenCageGeocoder(this.options);\n    }\n  }\n  onAdd(map) {\n    const className = 'leaflet-control-opencage-geocoding';\n    const container = L.DomUtil.create('div', className);\n    const icon = L.DomUtil.create(\n      'div',\n      'leaflet-control-opencage-geocoding-icon',\n      container\n    );\n    const form = L.DomUtil.create('form', className + '-form', container);\n    this._form = form;\n\n    this._map = map;\n    this._container = container;\n\n    const input = L.DomUtil.create('input');\n    this._input = input;\n    input.type = 'text';\n    input.placeholder = this.options.placeholder;\n\n    input.addEventListener('keydown', this._keydown.bind(this));\n\n    this._errorElement = document.createElement('div');\n    this._errorElement.className = className + '-form-no-error';\n    this._errorElement.innerHTML = this.options.errorMessage;\n\n    this._alts = L.DomUtil.create(\n      'ul',\n      className +\n        '-alternatives leaflet-control-opencage-geocoding-alternatives-minimized'\n    );\n\n    form.appendChild(input);\n    form.appendChild(this._errorElement);\n    container.appendChild(this._alts);\n\n    form.addEventListener('submit', this._geocode.bind(this));\n\n    if (this.options.collapsed) {\n      if (this.options.expand === 'click') {\n        icon.addEventListener('click', (e) => {\n          if (e.button === 0 && e.detail !== 2) {\n            this._toggle();\n          }\n        });\n      } else {\n        icon.addEventListener('mouseover', this._expand.bind(this));\n        icon.addEventListener('mouseout', this._collapse.bind(this));\n        this._map.on('movestart', this._collapse, this);\n      }\n    } else {\n      this._expand();\n    }\n\n    L.DomEvent.disableClickPropagation(container);\n\n    return container;\n  }\n\n  /**\n   * Handle geocoding results\n   */\n  _geocodeResult(results) {\n    this._container.classList.remove(\n      'leaflet-control-opencage-geocoding-spinner'\n    );\n\n    if (results.length === 1) {\n      this._geocodeResultSelected(results[0]);\n    } else if (results.length > 0) {\n      this._alts.innerHTML = '';\n      this._results = results;\n      this._alts.classList.remove(\n        'leaflet-control-opencage-geocoding-alternatives-minimized'\n      );\n      for (let i = 0; i < results.length; i++) {\n        this._alts.appendChild(this._createAlt(results[i], i));\n      }\n    } else {\n      this._errorElement.classList.add(\n        'leaflet-control-opencage-geocoding-error'\n      );\n    }\n  }\n\n  /**\n   * Mark geocode result on map\n   */\n  markGeocode(result) {\n    if (result.bounds) {\n      // console.log(`fit bounds`, result.bounds);\n      this._map.fitBounds(result.bounds);\n    } else {\n      // console.log(`pan to`, result.center);\n      this._map.panTo(result.center);\n    }\n\n    if (this._geocodeMarker) {\n      this._map.removeLayer(this._geocodeMarker);\n    }\n\n    this._geocodeMarker = new Marker(result.center)\n      .bindPopup(result.name)\n      .addTo(this._map)\n      .openPopup();\n\n    return this;\n  }\n\n  /**\n   * Perform geocoding\n   */\n  _geocode(event) {\n    L.DomEvent.preventDefault(event);\n\n    this._container.classList.add('leaflet-control-opencage-geocoding-spinner');\n    // this.classList.add('leaflet-control-opencage-geocoding-spinner');\n    this._clearResults();\n    this.options.geocoder.geocode(this._input.value, this._geocodeResult, this);\n\n    return false;\n  }\n\n  /**\n   * Handle selected geocoding result\n   */\n  _geocodeResultSelected(result) {\n    if (this.options.collapsed) {\n      this._collapse();\n    } else {\n      this._clearResults();\n    }\n\n    if (\n      this.options.onResultClick &&\n      typeof this.options.onResultClick === 'function'\n    ) {\n      this.options.onResultClick(result);\n    }\n\n    if (this.options.addResultToMap) {\n      this.markGeocode(result);\n    }\n  }\n\n  /**\n   * Toggle control expansion\n   */\n  _toggle() {\n    if (\n      this._container.className.indexOf(\n        'leaflet-control-opencage-geocoding-expanded'\n      ) >= 0\n    ) {\n      this._collapse();\n    } else {\n      this._expand();\n    }\n  }\n\n  /**\n   * Expand the control\n   */\n  _expand() {\n    this._container.classList.add(\n      'leaflet-control-opencage-geocoding-expanded'\n    );\n    this._input.select();\n  }\n\n  /**\n   * Collapse the control\n   */\n  _collapse() {\n    this._container.className = this._container.className.replace(\n      ' leaflet-control-opencage-geocoding-expanded',\n      ''\n    );\n    this._alts.classList.add(\n      'leaflet-control-opencage-geocoding-alternatives-minimized'\n    );\n    this._errorElement.classList.remove(\n      'leaflet-control-opencage-geocoding-error'\n    );\n  }\n\n  /**\n   * Clear results display\n   */\n  _clearResults() {\n    this._alts.classList.add(\n      'leaflet-control-opencage-geocoding-alternatives-minimized'\n    );\n    this._selection = null;\n    this._errorElement.classList.remove(\n      'leaflet-control-opencage-geocoding-error'\n    );\n  }\n\n  /**\n   * Create alternative result element\n   */\n  _createAlt(result, index) {\n    const li = document.createElement('li');\n    li.innerHTML =\n      '<a href=\"#\" data-result-index=\"' +\n      index +\n      '\">' +\n      (this.options.showResultIcons && result.icon\n        ? '<img src=\"' + result.icon + '\"/>'\n        : '') +\n      result.name +\n      '</a>';\n\n    // L.DomEvent.addListener(\n    li.addEventListener('click', () => {\n      this._geocodeResultSelected(result);\n    });\n\n    return li;\n  }\n\n  /**\n   * Handle keyboard navigation\n   */\n  _keydown(e) {\n    const select = (dir) => {\n      if (this._selection) {\n        this._selection.firstChild.classList.remove(\n          'leaflet-control-opencage-geocoding-selected'\n        );\n        this._selection =\n          this._selection[dir > 0 ? 'nextSibling' : 'previousSibling'];\n      }\n\n      if (!this._selection) {\n        this._selection = this._alts[dir > 0 ? 'firstChild' : 'lastChild'];\n      }\n\n      if (this._selection) {\n        this._selection.firstChild.classList.add(\n          'leaflet-control-opencage-geocoding-selected'\n        );\n      }\n    };\n\n    switch (e.keyCode) {\n      case 38: // Up\n        select(-1);\n        L.DomEvent.preventDefault(e);\n        break;\n      case 40: // Down\n        select(1);\n        L.DomEvent.preventDefault(e);\n        break;\n      case 13: // Enter\n        if (this._selection) {\n          const index = parseInt(\n            this._selection.firstChild.getAttribute('data-result-index'),\n            10\n          );\n          this._geocodeResultSelected(this._results[index]);\n          this._clearResults();\n          L.DomEvent.preventDefault(e);\n        }\n        break;\n    }\n    return true;\n  }\n}\n","import { OpenCageGeocoder } from './geocoder.js';\nimport { OpenCageGeocodingControl } from './geocoding.js';\n\nconst OpenCageGeocoding = OpenCageGeocodingControl;\n// Factory function for backwards compatibility\nconst openCageGeocoding = (options) => {\n  return new OpenCageGeocodingControl(options);\n};\n\n// Attach geocoder to the control class\nOpenCageGeocodingControl.Geocoder = OpenCageGeocoder;\nOpenCageGeocodingControl.geocoder = (options) => {\n  return new OpenCageGeocoder(options);\n};\n\n// TODO: decide if we want to attach to L.Control or not\n// Attach to L.Control for global usage\nObject.assign(L.Control, {\n  OpenCageGeocoding: OpenCageGeocodingControl,\n  openCageGeocoding: openCageGeocoding,\n});\n\n// Export for ES modules\nexport { OpenCageGeocoder, openCageGeocoding, OpenCageGeocoding };\nexport default OpenCageGeocodingControl;\n"],"names":["L"],"mappings":"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"}